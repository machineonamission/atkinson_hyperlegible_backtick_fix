SplineFontDB: 3.2
FontName: AtkinsonHyperlegibleMono-Bold
FullName: Atkinson Hyperlegible Mono Bold
FamilyName: Atkinson Hyperlegible Mono
Weight: Bold
Copyright: (c) 2020, 2024 Braille Institute of America, Inc., a 501(c)(3) Charitable Organization.
Version: 2.001
ItalicAngle: 0
UnderlinePosition: -105
UnderlineWidth: 54
Ascent: 800
Descent: 200
InvalidEm: 0
sfntRevision: 0x00020041
LayerCount: 2
Layer: 0 1 "Back" 1
Layer: 1 1 "Fore" 0
XUID: [1021 98 -1085082909 5028]
StyleMap: 0x0020
FSType: 8
OS2Version: 4
OS2_WeightWidthSlopeOnly: 0
OS2_UseTypoMetrics: 1
CreationTime: 1714055139
ModificationTime: 1743220880
PfmFamily: 81
TTFWeight: 700
TTFWidth: 5
LineGap: 200
VLineGap: 0
Panose: 0 0 0 0 0 0 0 0 0 0
OS2TypoAscent: 796
OS2TypoAOffset: 0
OS2TypoDescent: -251
OS2TypoDOffset: 0
OS2TypoLinegap: 150
OS2WinAscent: 996
OS2WinAOffset: 0
OS2WinDescent: 411
OS2WinDOffset: 0
HheadAscent: 796
HheadAOffset: 0
HheadDescent: -161
HheadDOffset: 0
OS2SubXSize: 650
OS2SubYSize: 600
OS2SubXOff: 0
OS2SubYOff: 75
OS2SupXSize: 650
OS2SupYSize: 600
OS2SupXOff: 0
OS2SupYOff: 350
OS2StrikeYSize: 54
OS2StrikeYPos: 258
OS2CapHeight: 668
OS2XHeight: 496
OS2Vendor: 'UKWN'
OS2CodePages: 20000093.00000000
OS2UnicodeRanges: a000006f.0000600a.00000000.00000000
Lookup: 3 0 0 "'aalt' Access All Alternates in Latin lookup 0" { "'aalt' Access All Alternates in Latin lookup 0 subtable"  } ['aalt' ('DFLT' <'dflt' > 'latn' <'MOL ' 'NLD ' 'ROM ' 'dflt' > ) ]
Lookup: 6 16 0 "'ccmp' Glyph Composition/Decomposition in Latin lookup 1" { "'ccmp' Glyph Composition/Decomposition in Latin lookup 1 contextual 0"  "'ccmp' Glyph Composition/Decomposition in Latin lookup 1 contextual 1"  } ['ccmp' ('DFLT' <'dflt' > 'latn' <'MOL ' 'NLD ' 'ROM ' 'dflt' > ) ]
Lookup: 6 0 0 "'ccmp' Glyph Composition/Decomposition in Latin lookup 2" { "'ccmp' Glyph Composition/Decomposition in Latin lookup 2 contextual 0"  "'ccmp' Glyph Composition/Decomposition in Latin lookup 2 contextual 1"  } ['ccmp' ('DFLT' <'dflt' > 'latn' <'MOL ' 'NLD ' 'ROM ' 'dflt' > ) ]
Lookup: 6 0 0 "'ccmp' Glyph Composition/Decomposition in Latin lookup 3" { "'ccmp' Glyph Composition/Decomposition in Latin lookup 3 contextual 0"  "'ccmp' Glyph Composition/Decomposition in Latin lookup 3 contextual 1"  } ['ccmp' ('DFLT' <'dflt' > 'latn' <'MOL ' 'NLD ' 'ROM ' 'dflt' > ) ]
Lookup: 1 0 0 "'locl' Localized Forms in Latin lookup 4" { "'locl' Localized Forms in Latin lookup 4 subtable"  } ['locl' ('latn' <'MOL ' 'ROM ' > ) ]
Lookup: 6 0 0 "'locl' Localized Forms in Latin lookup 5" { "'locl' Localized Forms in Latin lookup 5 subtable"  } ['locl' ('latn' <'NLD ' > ) ]
Lookup: 1 0 0 "'sups' Superscript in Latin lookup 6" { "'sups' Superscript in Latin lookup 6 subtable" ("superior") } ['sups' ('DFLT' <'dflt' > 'latn' <'MOL ' 'NLD ' 'ROM ' 'dflt' > ) ]
Lookup: 4 0 0 "'frac' Diagonal Fractions in Latin lookup 7" { "'frac' Diagonal Fractions in Latin lookup 7 subtable"  } ['frac' ('DFLT' <'dflt' > 'latn' <'MOL ' 'NLD ' 'ROM ' 'dflt' > ) ]
Lookup: 6 0 0 "'ordn' Ordinals in Latin lookup 8" { "'ordn' Ordinals in Latin lookup 8 contextual 0"  "'ordn' Ordinals in Latin lookup 8 contextual 1"  } ['ordn' ('DFLT' <'dflt' > 'latn' <'MOL ' 'NLD ' 'ROM ' 'dflt' > ) ]
Lookup: 1 0 0 "'case' Case-Sensitive Forms in Latin lookup 9" { "'case' Case-Sensitive Forms in Latin lookup 9 subtable"  } ['case' ('DFLT' <'dflt' > 'latn' <'MOL ' 'NLD ' 'ROM ' 'dflt' > ) ]
Lookup: 1 0 0 "'zero' Slashed Zero in Latin lookup 10" { "'zero' Slashed Zero in Latin lookup 10 subtable"  } ['zero' ('DFLT' <'dflt' > 'latn' <'MOL ' 'NLD ' 'ROM ' 'dflt' > ) ]
Lookup: 1 16 0 "Single Substitution lookup 11" { "Single Substitution lookup 11 subtable"  } []
Lookup: 1 0 0 "Single Substitution lookup 12" { "Single Substitution lookup 12 subtable"  } []
Lookup: 1 0 0 "Single Substitution lookup 13" { "Single Substitution lookup 13 subtable"  } []
Lookup: 1 0 0 "Single Substitution lookup 14" { "Single Substitution lookup 14 subtable"  } []
Lookup: 260 0 0 "'mark' Mark Positioning in Latin lookup 0" { "'mark' Mark Positioning in Latin lookup 0 subtable"  } ['mark' ('DFLT' <'dflt' > 'latn' <'MOL ' 'NLD ' 'ROM ' 'dflt' > ) ]
Lookup: 260 0 0 "'mark' Mark Positioning in Latin lookup 1" { "'mark' Mark Positioning in Latin lookup 1 subtable"  } ['mark' ('DFLT' <'dflt' > 'latn' <'MOL ' 'NLD ' 'ROM ' 'dflt' > ) ]
Lookup: 260 0 0 "'mark' Mark Positioning in Latin lookup 2" { "'mark' Mark Positioning in Latin lookup 2 subtable"  } ['mark' ('DFLT' <'dflt' > 'latn' <'MOL ' 'NLD ' 'ROM ' 'dflt' > ) ]
Lookup: 262 65552 0 "'mkmk' Mark to Mark in Latin lookup 3" { "'mkmk' Mark to Mark in Latin lookup 3 subtable"  } ['mkmk' ('DFLT' <'dflt' > 'latn' <'MOL ' 'NLD ' 'ROM ' 'dflt' > ) ]
Lookup: 262 131088 0 "'mkmk' Mark to Mark in Latin lookup 4" { "'mkmk' Mark to Mark in Latin lookup 4 subtable"  } ['mkmk' ('DFLT' <'dflt' > 'latn' <'MOL ' 'NLD ' 'ROM ' 'dflt' > ) ]
MarkAttachSets: 3
"MarkSet-0" 93 uni0308 uni0307 gravecomb acutecomb uni030B uni0302 uni030C uni0306 uni030A tildecomb uni0304
"MarkSet-1" 15 uni0326 uni0327
"MarkSet-2" 256 uni0308 uni0308.case uni0307 uni0307.case uni0307.large gravecomb gravecomb.case acutecomb acutecomb.case uni030B uni030B.case uni0302 uni0302.case uni030C uni030C.case uni0306 uni0306.case uni030A uni030A.case tildecomb tildecomb.case uni0304 uni0304.case
DEI: 91125
ChainSub2: coverage "'ordn' Ordinals in Latin lookup 8 contextual 1" 0 0 0 1
 1 1 0
  Coverage: 3 O o
  BCoverage: 49 zero one two three four five six seven eight nine
 1
  SeqLookup: 0 "Single Substitution lookup 14"
EndFPST
ChainSub2: coverage "'ordn' Ordinals in Latin lookup 8 contextual 0" 0 0 0 1
 1 1 0
  Coverage: 3 A a
  BCoverage: 49 zero one two three four five six seven eight nine
 1
  SeqLookup: 0 "Single Substitution lookup 14"
EndFPST
ChainSub2: glyph "'locl' Localized Forms in Latin lookup 5 subtable" 0 0 0 2
 String: 1 J
 BString: 6 Iacute
 FString: 0 
 1
  SeqLookup: 0 "Single Substitution lookup 13"
 String: 1 j
 BString: 6 iacute
 FString: 0 
 1
  SeqLookup: 0 "Single Substitution lookup 13"
EndFPST
ChainSub2: coverage "'ccmp' Glyph Composition/Decomposition in Latin lookup 3 contextual 1" 0 0 0 1
 1 1 0
  Coverage: 101 uni0308 uni0307 gravecomb acutecomb uni030B uni0302 uni030C uni0306 uni030A tildecomb uni0304 uni0328
  BCoverage: 161 uni0308.case uni0307.case gravecomb.case acutecomb.case uni030B.case uni0302.case uni030C.case uni0306.case uni030A.case tildecomb.case uni0304.case uni0328.case
 1
  SeqLookup: 0 "Single Substitution lookup 12"
EndFPST
ChainSub2: coverage "'ccmp' Glyph Composition/Decomposition in Latin lookup 3 contextual 0" 0 0 0 1
 1 0 1
  Coverage: 101 uni0308 uni0307 gravecomb acutecomb uni030B uni0302 uni030C uni0306 uni030A tildecomb uni0304 uni0328
  FCoverage: 161 uni0308.case uni0307.case gravecomb.case acutecomb.case uni030B.case uni0302.case uni030C.case uni0306.case uni030A.case tildecomb.case uni0304.case uni0328.case
 1
  SeqLookup: 0 "Single Substitution lookup 12"
EndFPST
ChainSub2: coverage "'ccmp' Glyph Composition/Decomposition in Latin lookup 2 contextual 1" 0 0 0 1
 1 1 0
  Coverage: 101 uni0308 uni0307 gravecomb acutecomb uni030B uni0302 uni030C uni0306 uni030A tildecomb uni0304 uni0328
  BCoverage: 750 A Aacute Abreve Acircumflex Adieresis Agrave Amacron Aogonek Aring Atilde AE B C Cacute Ccaron Ccedilla Cdotaccent D Dcaron Dcroat Eth E Eacute Ecaron Ecircumflex Edieresis Edotaccent Egrave Emacron Eogonek F G Gbreve uni0122 Gdotaccent H Hbar I IJ Iacute Icircumflex Idieresis Idotaccent Igrave Imacron Iogonek J uni004A0301 K uni0136 L Lcaron uni013B Lslash M N Nacute Ncaron uni0145 Ntilde O Oacute Ocircumflex Odieresis Ograve Ohungarumlaut Oslash Otilde OE P Thorn Q R Racute Rcaron S Sacute Scaron Scedilla uni0218 uni1E9E T Tcaron uni0162 uni021A U Uacute Ucircumflex Udieresis Ugrave Uhungarumlaut Umacron Uogonek Uring V W Wacute Wcircumflex Wdieresis Wgrave X Y Yacute Ycircumflex Ydieresis Ygrave Z Zacute Zcaron Zdotaccent uni0394 uni03A9
 1
  SeqLookup: 0 "Single Substitution lookup 12"
EndFPST
ChainSub2: coverage "'ccmp' Glyph Composition/Decomposition in Latin lookup 2 contextual 0" 0 0 0 1
 1 1 0
  Coverage: 101 uni0308 uni0307 gravecomb acutecomb uni030B uni0302 uni030C uni0306 uni030A tildecomb uni0304 uni0328
  BCoverage: 101 uni0308 uni0307 gravecomb acutecomb uni030B uni0302 uni030C uni0306 uni030A tildecomb uni0304 uni0328
 1
  SeqLookup: 0 "Single Substitution lookup 12"
EndFPST
ChainSub2: coverage "'ccmp' Glyph Composition/Decomposition in Latin lookup 1 contextual 1" 0 0 0 1
 1 0 1
  Coverage: 1 j
  FCoverage: 93 uni0308 uni0307 gravecomb acutecomb uni030B uni0302 uni030C uni0306 uni030A tildecomb uni0304
 1
  SeqLookup: 0 "Single Substitution lookup 11"
EndFPST
ChainSub2: coverage "'ccmp' Glyph Composition/Decomposition in Latin lookup 1 contextual 0" 0 0 0 1
 1 0 1
  Coverage: 1 i
  FCoverage: 93 uni0308 uni0307 gravecomb acutecomb uni030B uni0302 uni030C uni0306 uni030A tildecomb uni0304
 1
  SeqLookup: 0 "Single Substitution lookup 11"
EndFPST
TtTable: prep
SVTCA[y-axis]
MPPEM
PUSHW_1
 200
GT
IF
PUSHB_2
 1
 1
INSTCTRL
EIF
PUSHB_1
 1
PUSHW_2
 2048
 2048
MUL
WCVTF
PUSHB_2
 0
 7
WS
PUSHB_5
 0
 43
 27
 3
 0
LOOPCALL
PUSHB_2
 0
 7
WS
PUSHB_8
 48
 4
 32
 8
 18
 7
 3
 10
LOOPCALL
PUSHB_2
 0
 7
WS
PUSHB_8
 52
 2
 40
 6
 25
 5
 3
 10
LOOPCALL
PUSHB_2
 0
 10
WS
PUSHW_5
 3136
 2112
 1216
 3
 11
LOOPCALL
PUSHB_2
 0
 13
WS
PUSHW_5
 64
 64
 64
 3
 11
LOOPCALL
PUSHW_2
 3
 0
WCVTP
PUSHB_2
 36
 1
GETINFO
LTEQ
IF
PUSHB_1
 64
GETINFO
IF
PUSHW_2
 3
 100
WCVTP
PUSHB_2
 40
 1
GETINFO
LTEQ
IF
PUSHW_1
 2048
GETINFO
IF
PUSHW_2
 3
 0
WCVTP
EIF
ELSE
PUSHB_2
 39
 1
GETINFO
LTEQ
IF
PUSHW_3
 2176
 1
 1088
GETINFO
MUL
EQ
IF
PUSHW_2
 3
 0
WCVTP
EIF
EIF
EIF
EIF
EIF
PUSHB_8
 50
 2
 34
 6
 20
 5
 3
 14
LOOPCALL
PUSHW_1
 511
SCANCTRL
PUSHB_1
 4
SCANTYPE
PUSHB_2
 2
 0
WCVTP
PUSHB_4
 5
 100
 6
 0
WCVTP
WCVTP
EndTTInstrs
TtTable: fpgm
PUSHB_1
 0
FDEF
DUP
PUSHB_1
 0
NEQ
IF
RCVT
EIF
DUP
DUP
MPPEM
PUSHW_1
 14
LTEQ
MPPEM
PUSHB_1
 6
GTEQ
AND
IF
PUSHB_1
 52
ELSE
PUSHB_1
 40
EIF
ADD
FLOOR
DUP
ROLL
NEQ
IF
PUSHB_1
 2
CINDEX
SUB
PUSHW_2
 2048
 2048
MUL
MUL
SWAP
DIV
ELSE
POP
POP
PUSHB_1
 0
EIF
PUSHB_1
 0
RS
SWAP
WCVTP
PUSHB_3
 0
 1
 0
RS
ADD
WS
ENDF
PUSHB_1
 1
FDEF
PUSHB_1
 32
ADD
FLOOR
ENDF
PUSHB_1
 2
FDEF
SWAP
POP
SWAP
POP
ENDF
PUSHB_1
 3
FDEF
DUP
ABS
PUSHB_4
 3
 20
 21
 0
WS
RS
PUSHB_1
 19
RS
DUP
ADD
ADD
WS
PUSHB_2
 2
 20
RS
WS
PUSHB_2
 37
 3
RS
PUSHB_1
 2
RS
EQ
JROT
DUP
PUSHB_1
 12
SWAP
PUSHB_1
 2
RS
RS
SUB
ABS
PUSHB_1
 4
LT
JROT
PUSHB_3
 2
 2
 2
RS
ADD
WS
PUSHB_1
 33
NEG
JMPR
POP
PUSHB_1
 2
RS
RS
PUSHB_3
 14
 21
 1
WS
JMPR
DUP
PUSHB_1
 2
RS
SWAP
WS
PUSHB_3
 19
 1
 19
RS
ADD
WS
SWAP
PUSHB_1
 0
LT
IF
NEG
EIF
PUSHB_3
 22
 1
 2
RS
ADD
WS
ENDF
PUSHB_1
 4
FDEF
PUSHB_1
 3
CALL
PUSHB_1
 21
RS
IF
SWAP
POP
SWAP
POP
PUSHB_1
 22
RS
RS
SWAP
PUSHB_1
 0
LT
IF
NEG
EIF
ELSE
DUP
ABS
DUP
PUSHB_1
 192
LT
PUSHB_1
 4
MINDEX
AND
PUSHB_3
 40
 1
 13
RS
RCVT
MUL
RCVT
PUSHB_1
 6
RCVT
IF
POP
PUSHB_1
 3
CINDEX
EIF
GT
OR
IF
POP
SWAP
POP
ELSE
ROLL
IF
DUP
PUSHB_1
 80
LT
IF
POP
PUSHB_1
 64
EIF
ELSE
DUP
PUSHB_1
 56
LT
IF
POP
PUSHB_1
 56
EIF
EIF
DUP
PUSHB_2
 1
 13
RS
RCVT
MUL
RCVT
SUB
ABS
PUSHB_1
 40
LT
IF
POP
PUSHB_2
 1
 13
RS
RCVT
MUL
RCVT
DUP
PUSHB_1
 48
LT
IF
POP
PUSHB_1
 48
EIF
ELSE
DUP
PUSHB_1
 192
LT
IF
DUP
FLOOR
DUP
ROLL
ROLL
SUB
DUP
PUSHB_1
 10
LT
IF
ADD
ELSE
DUP
PUSHB_1
 32
LT
IF
POP
PUSHB_1
 10
ADD
ELSE
DUP
PUSHB_1
 54
LT
IF
POP
PUSHB_1
 54
ADD
ELSE
ADD
EIF
EIF
EIF
ELSE
PUSHB_1
 2
CINDEX
PUSHB_1
 12
RS
MUL
PUSHB_1
 0
GT
IF
PUSHB_1
 0
MPPEM
PUSHB_1
 10
LT
IF
POP
PUSHB_1
 12
RS
ELSE
MPPEM
PUSHB_1
 30
LT
IF
POP
PUSHB_1
 30
MPPEM
SUB
PUSHW_1
 4096
MUL
PUSHB_1
 12
RS
MUL
PUSHW_1
 1280
DIV
EIF
EIF
ABS
SUB
EIF
PUSHB_1
 1
CALL
EIF
EIF
SWAP
PUSHB_1
 0
LT
IF
NEG
EIF
EIF
DUP
ABS
PUSHB_1
 22
RS
SWAP
WS
EIF
ENDF
PUSHB_1
 5
FDEF
DUP
RCVT
DUP
PUSHB_1
 4
CINDEX
SUB
ABS
DUP
PUSHB_1
 7
RS
LT
IF
PUSHB_1
 7
SWAP
WS
PUSHB_1
 8
SWAP
WS
ELSE
POP
POP
EIF
PUSHB_1
 1
ADD
ENDF
PUSHB_1
 6
FDEF
SWAP
POP
SWAP
POP
PUSHB_1
 3
CALL
DUP
ABS
PUSHB_2
 7
 98
WS
DUP
PUSHB_1
 8
SWAP
WS
PUSHB_1
 6
RCVT
IF
ELSE
PUSHB_2
 1
 13
RS
RCVT
MUL
PUSHB_2
 1
 13
RS
PUSHB_1
 3
ADD
RCVT
MUL
PUSHB_1
 5
LOOPCALL
POP
DUP
PUSHB_1
 8
RS
DUP
ROLL
DUP
ROLL
PUSHB_1
 1
CALL
PUSHB_2
 48
 5
CINDEX
PUSHB_1
 4
MINDEX
LTEQ
IF
ADD
LT
ELSE
SUB
GT
EIF
IF
SWAP
EIF
POP
EIF
DUP
PUSHB_1
 64
GTEQ
IF
PUSHB_1
 1
CALL
ELSE
POP
PUSHB_1
 64
EIF
SWAP
PUSHB_1
 0
LT
IF
NEG
EIF
ENDF
PUSHB_1
 7
FDEF
PUSHB_1
 9
RS
CALL
PUSHB_3
 0
 2
 0
RS
ADD
WS
ENDF
PUSHB_1
 8
FDEF
PUSHB_1
 9
SWAP
WS
SWAP
DUP
PUSHB_1
 0
SWAP
WS
SUB
PUSHB_1
 2
DIV
FLOOR
PUSHB_1
 1
MUL
PUSHB_1
 1
ADD
PUSHB_1
 7
LOOPCALL
ENDF
PUSHB_1
 9
FDEF
DUP
DUP
RCVT
DUP
PUSHB_1
 14
RS
MUL
PUSHW_1
 1024
DIV
DUP
PUSHB_1
 0
LT
IF
PUSHB_1
 64
ADD
EIF
FLOOR
PUSHB_1
 1
MUL
ADD
WCVTP
PUSHB_1
 1
ADD
ENDF
PUSHB_1
 10
FDEF
PUSHB_3
 9
 14
 0
RS
RCVT
WS
LOOPCALL
POP
PUSHB_3
 0
 1
 0
RS
ADD
WS
ENDF
PUSHB_1
 11
FDEF
PUSHB_1
 0
RS
SWAP
WCVTP
PUSHB_3
 0
 1
 0
RS
ADD
WS
ENDF
PUSHB_1
 12
FDEF
DUP
DUP
RCVT
DUP
PUSHB_1
 1
CALL
SWAP
PUSHB_1
 0
RS
PUSHB_1
 4
CINDEX
ADD
DUP
RCVT
ROLL
SWAP
SUB
DUP
ABS
DUP
PUSHB_1
 32
LT
IF
POP
PUSHB_1
 0
ELSE
PUSHB_1
 48
LT
IF
PUSHB_1
 32
ELSE
PUSHB_1
 64
EIF
EIF
SWAP
PUSHB_1
 0
LT
IF
NEG
EIF
PUSHB_1
 3
CINDEX
SWAP
SUB
WCVTP
WCVTP
PUSHB_1
 1
ADD
ENDF
PUSHB_1
 13
FDEF
DUP
DUP
RCVT
DUP
PUSHB_1
 1
CALL
SWAP
PUSHB_1
 0
RS
PUSHB_1
 4
CINDEX
ADD
DUP
RCVT
ROLL
SWAP
SUB
DUP
ABS
PUSHB_1
 36
LT
IF
PUSHB_1
 0
ELSE
PUSHB_1
 64
EIF
SWAP
PUSHB_1
 0
LT
IF
NEG
EIF
PUSHB_1
 3
CINDEX
SWAP
SUB
WCVTP
WCVTP
PUSHB_1
 1
ADD
ENDF
PUSHB_1
 14
FDEF
DUP
PUSHB_1
 0
SWAP
WS
PUSHB_4
 13
 12
 0
 3
RCVT
LT
IF
POP
ELSE
SWAP
POP
EIF
LOOPCALL
POP
ENDF
PUSHB_1
 15
FDEF
PUSHB_2
 2
 2
RCVT
PUSHB_1
 100
SUB
WCVTP
ENDF
PUSHB_1
 16
FDEF
PUSHB_1
 1
ADD
DUP
DUP
PUSHB_1
 15
RS
MD[orig]
PUSHB_1
 0
LT
IF
DUP
PUSHB_1
 15
SWAP
WS
EIF
PUSHB_1
 16
RS
MD[orig]
PUSHB_1
 0
GT
IF
DUP
PUSHB_1
 16
SWAP
WS
EIF
ENDF
PUSHB_1
 17
FDEF
DUP
PUSHB_1
 16
DIV
FLOOR
PUSHB_1
 1
MUL
DUP
PUSHW_1
 1024
MUL
ROLL
SWAP
SUB
PUSHB_1
 17
RS
ADD
DUP
ROLL
ADD
DUP
PUSHB_1
 17
SWAP
WS
SWAP
ENDF
PUSHB_1
 18
FDEF
MPPEM
EQ
IF
PUSHB_2
 4
 100
WCVTP
EIF
DEPTH
PUSHB_1
 13
NEG
SWAP
JROT
ENDF
PUSHB_1
 19
FDEF
MPPEM
LTEQ
IF
MPPEM
GTEQ
IF
PUSHB_2
 4
 100
WCVTP
EIF
ELSE
POP
EIF
DEPTH
PUSHB_1
 19
NEG
SWAP
JROT
ENDF
PUSHB_1
 20
FDEF
PUSHB_2
 0
 18
RS
NEQ
IF
PUSHB_2
 18
 18
RS
PUSHB_1
 1
SUB
WS
PUSHB_1
 17
CALL
EIF
PUSHB_1
 0
RS
PUSHB_1
 2
CINDEX
WS
PUSHB_2
 15
 2
CINDEX
WS
PUSHB_2
 16
 2
CINDEX
WS
PUSHB_1
 1
SZPS
SWAP
DUP
PUSHB_1
 3
CINDEX
LT
IF
PUSHB_2
 1
 0
RS
ADD
PUSHB_1
 4
CINDEX
WS
ROLL
ROLL
DUP
ROLL
SWAP
SUB
PUSHB_1
 16
LOOPCALL
POP
SWAP
PUSHB_1
 1
SUB
DUP
ROLL
SWAP
SUB
PUSHB_1
 16
LOOPCALL
POP
ELSE
PUSHB_2
 1
 0
RS
ADD
PUSHB_1
 2
CINDEX
WS
PUSHB_1
 2
CINDEX
SUB
PUSHB_1
 16
LOOPCALL
POP
EIF
PUSHB_1
 15
RS
GC[orig]
PUSHB_1
 16
RS
GC[orig]
ADD
PUSHB_1
 2
DIV
DUP
PUSHB_1
 0
LT
IF
PUSHB_1
 64
ADD
EIF
FLOOR
PUSHB_1
 1
MUL
DUP
PUSHB_1
 14
RS
MUL
PUSHW_1
 1024
DIV
DUP
PUSHB_1
 0
LT
IF
PUSHB_1
 64
ADD
EIF
FLOOR
PUSHB_1
 1
MUL
ADD
PUSHB_2
 0
 0
SZP0
SWAP
WCVTP
PUSHB_1
 1
RS
PUSHB_1
 0
MIAP[no-rnd]
PUSHB_3
 1
 1
 1
RS
ADD
WS
ENDF
PUSHB_1
 21
FDEF
SVTCA[y-axis]
PUSHB_2
 0
 2
RCVT
EQ
IF
PUSHB_1
 18
SWAP
WS
DUP
RCVT
PUSHB_1
 14
SWAP
WS
PUSHB_1
 13
SWAP
PUSHB_1
 3
ADD
WS
DUP
ADD
PUSHB_8
 24
 24
 1
 0
 17
 0
 19
 0
WS
WS
WS
ROLL
ADD
DUP
PUSHB_1
 20
SWAP
WS
PUSHB_1
 1
SUB
PUSHB_2
 20
 8
CALL
PUSHB_1
 139
CALL
ELSE
CLEAR
EIF
ENDF
PUSHB_1
 22
FDEF
PUSHB_2
 0
 21
CALL
ENDF
PUSHB_1
 23
FDEF
PUSHB_2
 1
 21
CALL
ENDF
PUSHB_1
 24
FDEF
PUSHB_2
 2
 21
CALL
ENDF
PUSHB_1
 25
FDEF
PUSHB_2
 3
 21
CALL
ENDF
PUSHB_1
 26
FDEF
PUSHB_2
 4
 21
CALL
ENDF
PUSHB_1
 27
FDEF
PUSHB_2
 5
 21
CALL
ENDF
PUSHB_1
 28
FDEF
PUSHB_2
 6
 21
CALL
ENDF
PUSHB_1
 29
FDEF
PUSHB_2
 7
 21
CALL
ENDF
PUSHB_1
 30
FDEF
PUSHB_2
 8
 21
CALL
ENDF
PUSHB_1
 31
FDEF
PUSHB_2
 9
 21
CALL
ENDF
PUSHB_1
 43
FDEF
SWAP
DUP
PUSHB_1
 16
DIV
FLOOR
PUSHB_1
 1
MUL
PUSHB_1
 6
ADD
MPPEM
EQ
IF
SWAP
DUP
MDAP[no-rnd]
PUSHB_1
 1
DELTAP1
ELSE
POP
POP
EIF
ENDF
PUSHB_1
 44
FDEF
SWAP
DUP
PUSHB_1
 16
DIV
FLOOR
PUSHB_1
 1
MUL
PUSHB_1
 22
ADD
MPPEM
EQ
IF
SWAP
DUP
MDAP[no-rnd]
PUSHB_1
 1
DELTAP2
ELSE
POP
POP
EIF
ENDF
PUSHB_1
 45
FDEF
SWAP
DUP
PUSHB_1
 16
DIV
FLOOR
PUSHB_1
 1
MUL
PUSHB_1
 38
ADD
MPPEM
EQ
IF
SWAP
DUP
MDAP[no-rnd]
PUSHB_1
 1
DELTAP3
ELSE
POP
POP
EIF
ENDF
PUSHB_1
 32
FDEF
SVTCA[y-axis]
PUSHB_1
 15
CALL
PUSHB_2
 0
 2
RCVT
EQ
IF
PUSHB_1
 18
SWAP
WS
DUP
RCVT
PUSHB_1
 14
SWAP
WS
PUSHB_1
 13
SWAP
PUSHB_1
 3
ADD
WS
DUP
ADD
PUSHB_1
 1
SUB
PUSHB_6
 24
 24
 1
 0
 17
 0
WS
WS
ROLL
ADD
PUSHB_2
 20
 8
CALL
PUSHB_1
 139
CALL
ELSE
CLEAR
EIF
ENDF
PUSHB_1
 33
FDEF
PUSHB_2
 0
 32
CALL
ENDF
PUSHB_1
 34
FDEF
PUSHB_2
 1
 32
CALL
ENDF
PUSHB_1
 35
FDEF
PUSHB_2
 2
 32
CALL
ENDF
PUSHB_1
 36
FDEF
PUSHB_2
 3
 32
CALL
ENDF
PUSHB_1
 37
FDEF
PUSHB_2
 4
 32
CALL
ENDF
PUSHB_1
 38
FDEF
PUSHB_2
 5
 32
CALL
ENDF
PUSHB_1
 39
FDEF
PUSHB_2
 6
 32
CALL
ENDF
PUSHB_1
 40
FDEF
PUSHB_2
 7
 32
CALL
ENDF
PUSHB_1
 41
FDEF
PUSHB_2
 8
 32
CALL
ENDF
PUSHB_1
 42
FDEF
PUSHB_2
 9
 32
CALL
ENDF
PUSHB_1
 46
FDEF
DUP
ALIGNRP
PUSHB_1
 1
ADD
ENDF
PUSHB_1
 47
FDEF
DUP
ADD
PUSHB_1
 24
ADD
DUP
RS
SWAP
PUSHB_1
 1
ADD
RS
PUSHB_1
 2
CINDEX
SUB
PUSHB_1
 1
ADD
PUSHB_1
 46
LOOPCALL
POP
ENDF
PUSHB_1
 48
FDEF
PUSHB_1
 47
CALL
PUSHB_1
 47
LOOPCALL
ENDF
PUSHB_1
 49
FDEF
DUP
DUP
GC[orig]
DUP
DUP
PUSHB_1
 14
RS
MUL
PUSHW_1
 1024
DIV
DUP
PUSHB_1
 0
LT
IF
PUSHB_1
 64
ADD
EIF
FLOOR
PUSHB_1
 1
MUL
ADD
SWAP
SUB
SHPIX
SWAP
DUP
ROLL
NEQ
IF
DUP
GC[orig]
DUP
DUP
PUSHB_1
 14
RS
MUL
PUSHW_1
 1024
DIV
DUP
PUSHB_1
 0
LT
IF
PUSHB_1
 64
ADD
EIF
FLOOR
PUSHB_1
 1
MUL
ADD
SWAP
SUB
SHPIX
ELSE
POP
EIF
ENDF
PUSHB_1
 50
FDEF
SVTCA[y-axis]
PUSHB_2
 0
 2
RCVT
EQ
IF
PUSHB_2
 14
 6
RCVT
WS
PUSHB_1
 1
SZPS
PUSHB_1
 49
LOOPCALL
PUSHB_2
 5
 1
SZP2
RCVT
IF
IUP[y]
EIF
ELSE
CLEAR
EIF
ENDF
PUSHB_1
 51
FDEF
SVTCA[y-axis]
PUSHB_1
 15
CALL
PUSHB_2
 0
 2
RCVT
EQ
IF
PUSHB_2
 14
 6
RCVT
WS
PUSHB_1
 1
SZPS
PUSHB_1
 49
LOOPCALL
PUSHB_2
 5
 1
SZP2
RCVT
IF
IUP[y]
EIF
ELSE
CLEAR
EIF
ENDF
PUSHB_1
 52
FDEF
DUP
SHC[rp1]
PUSHB_1
 1
ADD
ENDF
PUSHB_1
 53
FDEF
SVTCA[y-axis]
PUSHB_2
 14
 6
RCVT
WS
PUSHB_1
 1
RCVT
MUL
PUSHW_1
 1024
DIV
DUP
PUSHB_1
 0
LT
IF
PUSHB_1
 64
ADD
EIF
FLOOR
PUSHB_1
 1
MUL
PUSHB_1
 1
CALL
PUSHB_1
 14
RS
MUL
PUSHW_1
 1024
DIV
DUP
PUSHB_1
 0
LT
IF
PUSHB_1
 64
ADD
EIF
FLOOR
PUSHB_1
 1
MUL
PUSHB_1
 1
CALL
PUSHB_1
 0
SZPS
PUSHB_5
 0
 0
 0
 0
 0
WCVTP
MIAP[no-rnd]
SWAP
SHPIX
PUSHB_2
 52
 1
SZP2
LOOPCALL
POP
ENDF
PUSHB_1
 54
FDEF
DUP
ALIGNRP
DUP
GC[orig]
DUP
PUSHB_1
 14
RS
MUL
PUSHW_1
 1024
DIV
DUP
PUSHB_1
 0
LT
IF
PUSHB_1
 64
ADD
EIF
FLOOR
PUSHB_1
 1
MUL
ADD
PUSHB_1
 0
RS
SUB
SHPIX
ENDF
PUSHB_1
 55
FDEF
MDAP[no-rnd]
SLOOP
ALIGNRP
ENDF
PUSHB_1
 56
FDEF
DUP
ALIGNRP
DUP
GC[orig]
DUP
PUSHB_1
 14
RS
MUL
PUSHW_1
 1024
DIV
DUP
PUSHB_1
 0
LT
IF
PUSHB_1
 64
ADD
EIF
FLOOR
PUSHB_1
 1
MUL
ADD
PUSHB_1
 0
RS
SUB
PUSHB_1
 1
RS
MUL
SHPIX
ENDF
PUSHB_1
 57
FDEF
PUSHB_2
 2
 0
SZPS
CINDEX
DUP
MDAP[no-rnd]
DUP
GC[orig]
PUSHB_1
 0
SWAP
WS
PUSHB_1
 2
CINDEX
MD[grid]
ROLL
ROLL
GC[orig]
SWAP
GC[orig]
SWAP
SUB
DUP
IF
DIV
ELSE
POP
EIF
PUSHB_1
 1
SWAP
WS
PUSHB_3
 56
 1
 1
SZP2
SZP1
LOOPCALL
ENDF
PUSHB_1
 58
FDEF
PUSHB_1
 0
SZPS
PUSHB_1
 23
SWAP
WS
PUSHB_1
 4
CINDEX
PUSHB_1
 4
CINDEX
GC[orig]
SWAP
GC[orig]
SWAP
SUB
PUSHB_2
 12
 0
WS
PUSHB_1
 11
RS
CALL
NEG
ROLL
MDAP[no-rnd]
SWAP
DUP
DUP
ALIGNRP
ROLL
SHPIX
ENDF
PUSHB_1
 59
FDEF
PUSHB_1
 0
SZPS
PUSHB_1
 23
SWAP
WS
PUSHB_1
 4
CINDEX
PUSHB_1
 4
CINDEX
DUP
MDAP[no-rnd]
GC[orig]
SWAP
GC[orig]
SWAP
SUB
DUP
PUSHB_1
 6
SWAP
WS
PUSHB_2
 12
 0
WS
PUSHB_1
 11
RS
CALL
DUP
PUSHB_1
 96
LT
IF
DUP
PUSHB_1
 64
LTEQ
IF
PUSHB_4
 4
 32
 5
 32
ELSE
PUSHB_4
 4
 38
 5
 26
EIF
WS
WS
SWAP
DUP
PUSHB_1
 10
RS
DUP
ROLL
SWAP
GC[orig]
SWAP
GC[orig]
SWAP
SUB
SWAP
GC[cur]
ADD
PUSHB_1
 6
RS
PUSHB_1
 2
DIV
DUP
PUSHB_1
 0
LT
IF
PUSHB_1
 64
ADD
EIF
FLOOR
PUSHB_1
 1
MUL
ADD
DUP
PUSHB_1
 1
CALL
DUP
ROLL
ROLL
SUB
DUP
PUSHB_1
 4
RS
ADD
ABS
SWAP
PUSHB_1
 5
RS
SUB
ABS
LT
IF
PUSHB_1
 4
RS
SUB
ELSE
PUSHB_1
 5
RS
ADD
EIF
PUSHB_1
 3
CINDEX
PUSHB_1
 2
DIV
DUP
PUSHB_1
 0
LT
IF
PUSHB_1
 64
ADD
EIF
FLOOR
PUSHB_1
 1
MUL
SUB
SWAP
DUP
DUP
PUSHB_1
 4
MINDEX
SWAP
GC[cur]
SUB
SHPIX
ELSE
SWAP
PUSHB_1
 10
RS
GC[cur]
PUSHB_1
 2
CINDEX
PUSHB_1
 10
RS
GC[orig]
SWAP
GC[orig]
SWAP
SUB
ADD
DUP
PUSHB_1
 6
RS
PUSHB_1
 2
DIV
DUP
PUSHB_1
 0
LT
IF
PUSHB_1
 64
ADD
EIF
FLOOR
PUSHB_1
 1
MUL
ADD
SWAP
DUP
PUSHB_1
 1
CALL
SWAP
PUSHB_1
 6
RS
ADD
PUSHB_1
 1
CALL
PUSHB_1
 5
CINDEX
SUB
PUSHB_1
 5
CINDEX
PUSHB_1
 2
DIV
DUP
PUSHB_1
 0
LT
IF
PUSHB_1
 64
ADD
EIF
FLOOR
PUSHB_1
 1
MUL
PUSHB_1
 4
MINDEX
SUB
DUP
PUSHB_1
 4
CINDEX
ADD
ABS
SWAP
PUSHB_1
 3
CINDEX
ADD
ABS
LT
IF
POP
ELSE
SWAP
POP
EIF
SWAP
DUP
DUP
PUSHB_1
 4
MINDEX
SWAP
GC[cur]
SUB
SHPIX
EIF
ENDF
PUSHB_1
 60
FDEF
PUSHB_1
 0
SZPS
PUSHB_1
 23
SWAP
WS
DUP
DUP
DUP
PUSHB_1
 5
MINDEX
DUP
MDAP[no-rnd]
GC[orig]
SWAP
GC[orig]
SWAP
SUB
SWAP
ALIGNRP
SHPIX
ENDF
PUSHB_1
 61
FDEF
PUSHB_1
 0
SZPS
PUSHB_1
 23
SWAP
WS
DUP
PUSHB_1
 10
SWAP
WS
DUP
DUP
DUP
GC[cur]
SWAP
GC[orig]
PUSHB_1
 1
CALL
SWAP
SUB
SHPIX
ENDF
PUSHB_1
 62
FDEF
PUSHB_1
 0
SZPS
PUSHB_1
 23
SWAP
WS
PUSHB_1
 3
CINDEX
PUSHB_1
 2
CINDEX
GC[orig]
SWAP
GC[orig]
SWAP
SUB
PUSHB_1
 0
EQ
IF
MDAP[no-rnd]
DUP
ALIGNRP
SWAP
POP
ELSE
PUSHB_1
 2
CINDEX
PUSHB_1
 2
CINDEX
GC[orig]
SWAP
GC[orig]
SWAP
SUB
DUP
PUSHB_1
 5
CINDEX
PUSHB_1
 4
CINDEX
GC[orig]
SWAP
GC[orig]
SWAP
SUB
PUSHB_1
 6
CINDEX
PUSHB_1
 5
CINDEX
MD[grid]
PUSHB_1
 2
CINDEX
SUB
PUSHW_2
 2048
 2048
MUL
MUL
SWAP
DUP
IF
DIV
ELSE
POP
EIF
MUL
PUSHW_1
 1024
DIV
DUP
PUSHB_1
 0
LT
IF
PUSHB_1
 64
ADD
EIF
FLOOR
PUSHB_1
 1
MUL
ADD
SWAP
MDAP[no-rnd]
SWAP
DUP
DUP
ALIGNRP
ROLL
SHPIX
SWAP
POP
EIF
ENDF
PUSHB_1
 63
FDEF
PUSHB_1
 0
SZPS
PUSHB_1
 23
SWAP
WS
DUP
PUSHB_1
 10
RS
DUP
MDAP[no-rnd]
GC[orig]
SWAP
GC[orig]
SWAP
SUB
DUP
ADD
PUSHB_1
 32
ADD
FLOOR
PUSHB_1
 2
DIV
DUP
PUSHB_1
 0
LT
IF
PUSHB_1
 64
ADD
EIF
FLOOR
PUSHB_1
 1
MUL
SWAP
DUP
DUP
ALIGNRP
ROLL
SHPIX
ENDF
PUSHB_1
 64
FDEF
SWAP
DUP
MDAP[no-rnd]
GC[cur]
PUSHB_1
 2
CINDEX
GC[cur]
PUSHB_1
 23
RS
IF
LT
ELSE
GT
EIF
IF
DUP
ALIGNRP
EIF
MDAP[no-rnd]
PUSHB_2
 48
 1
SZP1
CALL
ENDF
PUSHB_1
 65
FDEF
SWAP
DUP
MDAP[no-rnd]
GC[cur]
PUSHB_1
 2
CINDEX
GC[cur]
PUSHB_1
 23
RS
IF
GT
ELSE
LT
EIF
IF
DUP
ALIGNRP
EIF
MDAP[no-rnd]
PUSHB_2
 48
 1
SZP1
CALL
ENDF
PUSHB_1
 66
FDEF
SWAP
DUP
MDAP[no-rnd]
GC[cur]
PUSHB_1
 2
CINDEX
GC[cur]
PUSHB_1
 23
RS
IF
LT
ELSE
GT
EIF
IF
DUP
ALIGNRP
EIF
SWAP
DUP
MDAP[no-rnd]
GC[cur]
PUSHB_1
 2
CINDEX
GC[cur]
PUSHB_1
 23
RS
IF
GT
ELSE
LT
EIF
IF
DUP
ALIGNRP
EIF
MDAP[no-rnd]
PUSHB_2
 48
 1
SZP1
CALL
ENDF
PUSHB_1
 67
FDEF
PUSHB_1
 58
CALL
SWAP
DUP
MDAP[no-rnd]
GC[cur]
PUSHB_1
 2
CINDEX
GC[cur]
PUSHB_1
 23
RS
IF
LT
ELSE
GT
EIF
IF
DUP
ALIGNRP
EIF
MDAP[no-rnd]
PUSHB_2
 48
 1
SZP1
CALL
ENDF
PUSHB_1
 68
FDEF
PUSHB_1
 59
CALL
ROLL
DUP
DUP
ALIGNRP
PUSHB_1
 6
SWAP
WS
ROLL
SHPIX
SWAP
DUP
MDAP[no-rnd]
GC[cur]
PUSHB_1
 2
CINDEX
GC[cur]
PUSHB_1
 23
RS
IF
LT
ELSE
GT
EIF
IF
DUP
ALIGNRP
EIF
MDAP[no-rnd]
PUSHB_2
 48
 1
SZP1
CALL
PUSHB_1
 6
RS
MDAP[no-rnd]
PUSHB_1
 48
CALL
ENDF
PUSHB_1
 69
FDEF
PUSHB_1
 0
SZPS
PUSHB_1
 4
CINDEX
PUSHB_1
 4
MINDEX
DUP
DUP
DUP
GC[cur]
SWAP
GC[orig]
SUB
PUSHB_1
 12
SWAP
WS
MDAP[no-rnd]
GC[orig]
SWAP
GC[orig]
SWAP
SUB
PUSHB_1
 11
RS
CALL
SWAP
DUP
ALIGNRP
DUP
MDAP[no-rnd]
SWAP
SHPIX
PUSHB_2
 48
 1
SZP1
CALL
ENDF
PUSHB_1
 70
FDEF
PUSHB_2
 10
 4
CINDEX
WS
PUSHB_1
 0
SZPS
PUSHB_1
 4
CINDEX
PUSHB_1
 4
CINDEX
DUP
MDAP[no-rnd]
GC[orig]
SWAP
GC[orig]
SWAP
SUB
DUP
PUSHB_1
 6
SWAP
WS
PUSHB_2
 12
 0
WS
PUSHB_1
 11
RS
CALL
DUP
PUSHB_1
 96
LT
IF
DUP
PUSHB_1
 64
LTEQ
IF
PUSHB_4
 4
 32
 5
 32
ELSE
PUSHB_4
 4
 38
 5
 26
EIF
WS
WS
SWAP
DUP
GC[orig]
PUSHB_1
 6
RS
PUSHB_1
 2
DIV
DUP
PUSHB_1
 0
LT
IF
PUSHB_1
 64
ADD
EIF
FLOOR
PUSHB_1
 1
MUL
ADD
DUP
PUSHB_1
 1
CALL
DUP
ROLL
ROLL
SUB
DUP
PUSHB_1
 4
RS
ADD
ABS
SWAP
PUSHB_1
 5
RS
SUB
ABS
LT
IF
PUSHB_1
 4
RS
SUB
ELSE
PUSHB_1
 5
RS
ADD
EIF
PUSHB_1
 3
CINDEX
PUSHB_1
 2
DIV
DUP
PUSHB_1
 0
LT
IF
PUSHB_1
 64
ADD
EIF
FLOOR
PUSHB_1
 1
MUL
SUB
PUSHB_1
 2
CINDEX
GC[cur]
SUB
SHPIX
SWAP
DUP
ALIGNRP
SWAP
SHPIX
ELSE
POP
DUP
DUP
GC[cur]
SWAP
GC[orig]
PUSHB_1
 1
CALL
SWAP
SUB
SHPIX
POP
EIF
PUSHB_2
 48
 1
SZP1
CALL
ENDF
PUSHB_1
 71
FDEF
PUSHB_2
 0
 58
CALL
MDAP[no-rnd]
PUSHB_2
 48
 1
SZP1
CALL
ENDF
PUSHB_1
 72
FDEF
PUSHB_2
 0
 59
CALL
POP
SWAP
DUP
DUP
ALIGNRP
PUSHB_1
 6
SWAP
WS
SWAP
SHPIX
PUSHB_2
 48
 1
SZP1
CALL
PUSHB_1
 6
RS
MDAP[no-rnd]
PUSHB_1
 48
CALL
ENDF
PUSHB_1
 73
FDEF
PUSHB_1
 0
SZP2
DUP
GC[orig]
PUSHB_1
 0
SWAP
WS
PUSHB_3
 0
 1
 1
SZP2
SZP1
SZP0
MDAP[no-rnd]
PUSHB_1
 54
LOOPCALL
ENDF
PUSHB_1
 74
FDEF
PUSHB_1
 0
SZP2
DUP
GC[orig]
PUSHB_1
 0
SWAP
WS
PUSHB_3
 0
 1
 1
SZP2
SZP1
SZP0
MDAP[no-rnd]
PUSHB_1
 54
LOOPCALL
ENDF
PUSHB_1
 75
FDEF
PUSHB_2
 0
 1
SZP1
SZP0
PUSHB_1
 55
LOOPCALL
ENDF
PUSHB_1
 76
FDEF
PUSHB_1
 57
LOOPCALL
ENDF
PUSHB_1
 77
FDEF
PUSHB_1
 0
SZPS
RCVT
SWAP
DUP
MDAP[no-rnd]
DUP
GC[cur]
ROLL
SWAP
SUB
SHPIX
PUSHB_2
 48
 1
SZP1
CALL
ENDF
PUSHB_1
 78
FDEF
PUSHB_1
 10
SWAP
WS
PUSHB_1
 77
CALL
ENDF
PUSHB_1
 79
FDEF
PUSHB_3
 0
 0
 70
CALL
ENDF
PUSHB_1
 80
FDEF
PUSHB_3
 0
 1
 70
CALL
ENDF
PUSHB_1
 81
FDEF
PUSHB_3
 1
 0
 70
CALL
ENDF
PUSHB_1
 82
FDEF
PUSHB_3
 1
 1
 70
CALL
ENDF
PUSHB_1
 83
FDEF
PUSHB_3
 0
 0
 71
CALL
ENDF
PUSHB_1
 84
FDEF
PUSHB_3
 0
 1
 71
CALL
ENDF
PUSHB_1
 85
FDEF
PUSHB_3
 1
 0
 71
CALL
ENDF
PUSHB_1
 86
FDEF
PUSHB_3
 1
 1
 71
CALL
ENDF
PUSHB_1
 87
FDEF
PUSHB_4
 0
 0
 0
 67
CALL
ENDF
PUSHB_1
 88
FDEF
PUSHB_4
 0
 1
 0
 67
CALL
ENDF
PUSHB_1
 89
FDEF
PUSHB_4
 1
 0
 0
 67
CALL
ENDF
PUSHB_1
 90
FDEF
PUSHB_4
 1
 1
 0
 67
CALL
ENDF
PUSHB_1
 91
FDEF
PUSHB_4
 0
 0
 1
 67
CALL
ENDF
PUSHB_1
 92
FDEF
PUSHB_4
 0
 1
 1
 67
CALL
ENDF
PUSHB_1
 93
FDEF
PUSHB_4
 1
 0
 1
 67
CALL
ENDF
PUSHB_1
 94
FDEF
PUSHB_4
 1
 1
 1
 67
CALL
ENDF
PUSHB_1
 95
FDEF
PUSHB_3
 0
 0
 69
CALL
ENDF
PUSHB_1
 96
FDEF
PUSHB_3
 0
 1
 69
CALL
ENDF
PUSHB_1
 97
FDEF
PUSHB_3
 1
 0
 69
CALL
ENDF
PUSHB_1
 98
FDEF
PUSHB_3
 1
 1
 69
CALL
ENDF
PUSHB_1
 99
FDEF
PUSHB_3
 0
 0
 72
CALL
ENDF
PUSHB_1
 100
FDEF
PUSHB_3
 0
 1
 72
CALL
ENDF
PUSHB_1
 101
FDEF
PUSHB_3
 1
 0
 72
CALL
ENDF
PUSHB_1
 102
FDEF
PUSHB_3
 1
 1
 72
CALL
ENDF
PUSHB_1
 103
FDEF
PUSHB_4
 0
 0
 0
 68
CALL
ENDF
PUSHB_1
 104
FDEF
PUSHB_4
 0
 1
 0
 68
CALL
ENDF
PUSHB_1
 105
FDEF
PUSHB_4
 1
 0
 0
 68
CALL
ENDF
PUSHB_1
 106
FDEF
PUSHB_4
 1
 1
 0
 68
CALL
ENDF
PUSHB_1
 107
FDEF
PUSHB_4
 0
 0
 1
 68
CALL
ENDF
PUSHB_1
 108
FDEF
PUSHB_4
 0
 1
 1
 68
CALL
ENDF
PUSHB_1
 109
FDEF
PUSHB_4
 1
 0
 1
 68
CALL
ENDF
PUSHB_1
 110
FDEF
PUSHB_4
 1
 1
 1
 68
CALL
ENDF
PUSHB_1
 111
FDEF
PUSHB_2
 0
 60
CALL
MDAP[no-rnd]
PUSHB_2
 48
 1
SZP1
CALL
ENDF
PUSHB_1
 112
FDEF
PUSHB_2
 0
 60
CALL
PUSHB_1
 64
CALL
ENDF
PUSHB_1
 113
FDEF
PUSHB_2
 0
 60
CALL
PUSHB_1
 65
CALL
ENDF
PUSHB_1
 114
FDEF
PUSHB_1
 0
SZPS
PUSHB_2
 0
 60
CALL
PUSHB_1
 66
CALL
ENDF
PUSHB_1
 115
FDEF
PUSHB_2
 1
 60
CALL
PUSHB_1
 64
CALL
ENDF
PUSHB_1
 116
FDEF
PUSHB_2
 1
 60
CALL
PUSHB_1
 65
CALL
ENDF
PUSHB_1
 117
FDEF
PUSHB_1
 0
SZPS
PUSHB_2
 1
 60
CALL
PUSHB_1
 66
CALL
ENDF
PUSHB_1
 118
FDEF
PUSHB_2
 0
 61
CALL
MDAP[no-rnd]
PUSHB_2
 48
 1
SZP1
CALL
ENDF
PUSHB_1
 119
FDEF
PUSHB_2
 0
 61
CALL
PUSHB_1
 64
CALL
ENDF
PUSHB_1
 120
FDEF
PUSHB_2
 0
 61
CALL
PUSHB_1
 65
CALL
ENDF
PUSHB_1
 121
FDEF
PUSHB_2
 0
 61
CALL
PUSHB_1
 66
CALL
ENDF
PUSHB_1
 122
FDEF
PUSHB_2
 1
 61
CALL
PUSHB_1
 64
CALL
ENDF
PUSHB_1
 123
FDEF
PUSHB_2
 1
 61
CALL
PUSHB_1
 65
CALL
ENDF
PUSHB_1
 124
FDEF
PUSHB_2
 1
 61
CALL
PUSHB_1
 66
CALL
ENDF
PUSHB_1
 125
FDEF
PUSHB_2
 0
 62
CALL
MDAP[no-rnd]
PUSHB_2
 48
 1
SZP1
CALL
ENDF
PUSHB_1
 126
FDEF
PUSHB_2
 0
 62
CALL
PUSHB_1
 64
CALL
ENDF
PUSHB_1
 127
FDEF
PUSHB_2
 0
 62
CALL
PUSHB_1
 65
CALL
ENDF
PUSHB_1
 128
FDEF
PUSHB_2
 0
 62
CALL
PUSHB_1
 66
CALL
ENDF
PUSHB_1
 129
FDEF
PUSHB_2
 1
 62
CALL
PUSHB_1
 64
CALL
ENDF
PUSHB_1
 130
FDEF
PUSHB_2
 1
 62
CALL
PUSHB_1
 65
CALL
ENDF
PUSHB_1
 131
FDEF
PUSHB_2
 1
 62
CALL
PUSHB_1
 66
CALL
ENDF
PUSHB_1
 132
FDEF
PUSHB_2
 0
 63
CALL
MDAP[no-rnd]
PUSHB_2
 48
 1
SZP1
CALL
ENDF
PUSHB_1
 133
FDEF
PUSHB_2
 0
 63
CALL
PUSHB_1
 64
CALL
ENDF
PUSHB_1
 134
FDEF
PUSHB_2
 0
 63
CALL
PUSHB_1
 65
CALL
ENDF
PUSHB_1
 135
FDEF
PUSHB_2
 0
 63
CALL
PUSHB_1
 66
CALL
ENDF
PUSHB_1
 136
FDEF
PUSHB_2
 1
 63
CALL
PUSHB_1
 64
CALL
ENDF
PUSHB_1
 137
FDEF
PUSHB_2
 1
 63
CALL
PUSHB_1
 65
CALL
ENDF
PUSHB_1
 138
FDEF
PUSHB_2
 1
 63
CALL
PUSHB_1
 66
CALL
ENDF
PUSHB_1
 139
FDEF
PUSHB_3
 11
 0
 3
RCVT
LT
IF
PUSHB_1
 6
ELSE
PUSHB_3
 4
 2
 3
RCVT
IF
SWAP
POP
ELSE
POP
EIF
EIF
WS
CALL
PUSHB_1
 8
NEG
PUSHB_1
 3
DEPTH
LT
JROT
PUSHB_2
 5
 1
SZP2
RCVT
IF
IUP[y]
EIF
ENDF
EndTTInstrs
ShortTable: cvt  54
  0
  0
  0
  0
  0
  0
  0
  0
  0
  0
  0
  0
  0
  0
  0
  0
  24
  24
  24
  24
  680
  0
  496
  0
  -162
  680
  0
  496
  0
  -162
  143
  143
  109
  109
  668
  0
  708
  496
  0
  -162
  680
  -12
  751
  510
  -12
  -174
  24
  24
  24
  24
  786
  364
  786
  357
EndShort
ShortTable: maxp 16
  1
  0
  365
  88
  7
  64
  4
  2
  36
  78
  141
  0
  150
  3596
  2
  2
EndShort
LangName: 1033 "+AKkA 2020, 2024 Braille Institute of America, Inc., a 501(c)(3) Charitable Organization." "" "" "2.001;UKWN;AtkinsonHyperlegibleMono-Bold" "" "Version 2.001" "" "" "Applied Design Works, Letters from Sweden" "Elliott Scott, Megan Eiswerth, Linus Boman, Theodore Petrosky, Letters from Sweden" "" "https://www.BrailleInstitute.org/" "http://helloapplied.com" "Braille Institute of America, Inc. provides Atkinson Hyperlegible for use, without derivatives or alteration, to the public free of charge for all non-commercial and commercial work. No attribution required." "https://www.BrailleInstitute.org/" "" "Atkinson Hyperlegible Mono" "Bold"
GaspTable: 1 65535 15 1
Encoding: UnicodeBmp
UnicodeInterp: none
NameList: AGL For New Fonts
DisplaySize: -48
AntiAlias: 1
FitToEm: 0
WinInfo: 44 22 12
AnchorClass2: "Anchor-0" "'mark' Mark Positioning in Latin lookup 0 subtable" "Anchor-1" "'mark' Mark Positioning in Latin lookup 0 subtable" "Anchor-2" "'mark' Mark Positioning in Latin lookup 1 subtable" "Anchor-3" "'mark' Mark Positioning in Latin lookup 2 subtable" "Anchor-4" "'mkmk' Mark to Mark in Latin lookup 3 subtable" "Anchor-5" "'mkmk' Mark to Mark in Latin lookup 4 subtable"
EndSplineFont
